# Flush old rules
iptables -F

# Default deny
iptables -P INPUT DROP
iptables -P OUTPUT ACCEPT
iptables -P FORWARD DROP

# Allow loopback
iptables -A INPUT -i lo -j ACCEPT

# Allow SSH
iptables -A INPUT -p tcp --dport 22 -j ACCEPT

# Allow HTTP/S
iptables -A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT

# Allow related/established
iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

iptables -t nat -L

Here's a **comprehensive overview** of `iptables`, `netfilter`, and related components, covering the key concepts you asked for: rule verification, internals, targets, SPI (Stateful Packet Inspection), and IPv6 management.

---

## 🔍 1. Verifying `iptables` / `netfilter`

### ✅ Check if `iptables` is installed

```bash
iptables --version
```

### ✅ View current rules

```bash
sudo iptables -L -n -v
```

### ✅ Check kernel modules

```bash
lsmod | grep nf_
```

---

```bash
# Drop all pings
iptables -A INPUT -p icmp --icmp-type echo-request -j DROP

# Allow HTTP
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
```
---

## 🔐 4. `iptables` – SPI (Stateful Packet Inspection) Firewall

### Example: Allow related & established traffic

```bash
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
```

---

## 🛠️ 5. Setting up an SPI Firewall (Standard)

### 🧱 Basic Secure Firewall with SPI

```bash
# Flush rules
iptables -F

# Default policy
iptables -P INPUT DROP
iptables -P OUTPUT ACCEPT
iptables -P FORWARD DROP

# Allow loopback
iptables -A INPUT -i lo -j ACCEPT

# Allow established/related
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Allow SSH, HTTP, HTTPS
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
iptables -A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT

# Save rules
sudo netfilter-persistent save
```

---

## 🌐 6. `iptables` IPv6 Rule Management

### Use `ip6tables` for IPv6

All commands are **identical**, but affect **IPv6**:

```bash
sudo ip6tables -L
```

### Example: Allow only HTTPS over IPv6

```bash
sudo ip6tables -F
sudo ip6tables -P INPUT DROP
sudo ip6tables -P OUTPUT ACCEPT

sudo ip6tables -A INPUT -i lo -j ACCEPT
sudo ip6tables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
sudo ip6tables -A INPUT -p tcp --dport 443 -j ACCEPT
```

> ✅ Make sure your system has IPv6 enabled (`/etc/sysctl.conf` or `sysctl net.ipv6.conf.all.disable_ipv6`)

---

## 🧩 7. `xtables-addons`: Extending iptables

### ✅ Installation:

```bash
sudo apt install xtables-addons-common
```

### Example: Block IPs from a country (GeoIP):

```bash
iptables -A INPUT -m geoip --src-cc CN -j DROP
```


