Here's your **Day-8 LAB Guide**: Configuring **Snort IDS with Barnyard2** for logging, integrating it with **MariaDB**, and setting up **Fail2Ban with GeoIP protection**. This is a full, corrected, and structured walkthrough of everything you've mentioned.

---

## 🧪 Part 1: Snort IDS with Barnyard2 for Logging

---

### 🔧 Step 1: Install Required Dependencies

```bash
sudo apt update
sudo apt install -y autoconf automake default-libmysqlclient-dev \
dos2unix libmariadb-dev-compat libmariadb-dev libtool \
mariadb-client mariadb-server unzip
```

---

### 🔍 Step 2: Handle libpcap Versions

Check existing version:

```bash
dpkg -s libpcap0.8 | grep Version
dpkg -s libpcap0.8-dev | grep Version
```

Uninstall them:

```bash
sudo apt remove libpcap0.8 libpcap0.8-dev -y
```

Then manually install your required `.deb` versions:

```bash
sudo dpkg -i libpcap*.deb
```

> 🔁 Replace `libpcap*.deb` with the actual filename (e.g., `libpcap0.8-dev_1.8.1-6_amd64.deb`)

---

### 🐚 Step 3: Configure Snort

Edit config:

```bash
sudo nano /etc/snort/snort.conf
```

Add the following under the `output` section:

```conf
output unified2: filename snort.u2, limit 128
```

---

## 🐗 Step 4: Install & Configure Barnyard2

### 🔧 a. Build from Source

Navigate to the Barnyard2 directory:

```bash
./autogen.sh
sudo ln -s /usr/include/dumbnet.h /usr/include/dnet.h
sudo ldconfig
./configure --with-mysql --with-mysql-libraries=/usr/lib/x86_64-linux-gnu/
sudo make
sudo make install
```

---

### 📁 b. Setup Config & Logging Paths

```bash
sudo cp etc/barnyard2.conf /etc/snort/
sudo mkdir /var/log/barnyard2/
sudo chown snort:snort /var/log/barnyard2/

sudo touch /var/log/snort/barnyard2.waldo
sudo chown snort:snort /var/log/snort/barnyard2.waldo
```

---

### 🧩 Step 5: Setup MySQL/MariaDB for Logging

Log in:

```bash
sudo mysql -u root -p
```

Then run:

```sql
CREATE DATABASE snort;
CREATE USER 'snort'@'localhost' IDENTIFIED BY 'toor';
GRANT CREATE, INSERT, SELECT, DELETE, UPDATE ON snort.* TO 'snort'@'localhost';
FLUSH PRIVILEGES;
```

Import schema:

```bash
mysql -u root -p snort < /tmp/barnyard2-master/schemas/create_mysql
```

---

### ⚙️ Step 6: Edit `barnyard2.conf`

```bash
sudo nano /etc/snort/barnyard2.conf
```

Update with:

```conf
output database: log, mysql, user=snort password=toor dbname=snort host=localhost
```

Protect the config:

```bash
sudo chmod o-r /etc/snort/barnyard2.conf
```

---

### 🛠️ Step 7: Generate sid-msg.map

```bash
sudo sh -c "./create-sidmap.pl /etc/snort/rules/ > /etc/snort/sidmsg.map"
```

---

## 🚀 Step 8: Run Snort and Barnyard2

### Snort (Passive Detection):

```bash
sudo snort -q -i ens33 -u snort -g snort -c /etc/snort/snort.conf
```

> Replace `ens33` with your actual network interface (use `ip a` to check).

### Barnyard2 (Logging to DB):

```bash
sudo barnyard2 -c /etc/snort/barnyard2.conf \
-d /var/log/snort/ -f snort.u2 \
-w /var/log/snort/barnyard2.waldo \
-u snort -g snort
```

---

## 🌍 Part 2: GEOIP & Fail2Ban Configuration

---

### 🛡️ Install Fail2Ban + SystemD Support

```bash
sudo apt install python3-systemd fail2ban -y
```

---

### ✍️ Configure SSH Jail

```bash
sudo nano /etc/fail2ban/jail.local
```

Paste the following:

```ini
[sshd]
enabled = true
port = 22
backend = systemd
filter = sshd
maxretry = 3
bantime = 3600
findtime = 600
```

---

### 💡 Start and Enable Fail2Ban

```bash
sudo systemctl enable fail2ban
sudo systemctl restart fail2ban
sudo fail2ban-client status sshd
```

---

## ✅ Summary

| Component            | Purpose                             |
| -------------------- | ----------------------------------- |
| **Snort**            | Intrusion Detection (IDS)           |
| **Barnyard2**        | Logs Snort alerts to MariaDB        |
| **MariaDB**          | Storage for IDS events/logs         |
| **Fail2Ban**         | Protect SSH using ban logic         |
| **GEOIP (Optional)** | Geo-blocking via xtables (advanced) |

---

Would you like me to generate a script to **automate the full Snort + Barnyard2 setup**?
