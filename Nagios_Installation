This is a **well-structured, step-by-step Nagios installation tree**. To make this even more usable (especially for lab reports or personal automation), here’s a **summary checklist** and tips to streamline your workflow:

---

## ✅ **Nagios Core Installation Checklist (Ubuntu/Debian-Based)**

### 📁 **1. Preparations**

* ✅ `sudo apt-get install apache2 apache2-utils autoconf gcc libc6 libgd-dev make php python3 tree unzip wget libkrb5-dev openssl libssl-dev`

---

### 📦 **2. Download Source Code**

* ⬇️ Download & extract Nagios Core `.tar.gz`

```bash
tar -zxf nagios-*.tar.gz
cd nagios-*/
```

* ✅ `sudo ./configure --with-httpd-conf=/etc/apache2/sites-enabled`

---

### 🔧 **3. Compile Nagios**

* ✅ `sudo make all`

---

### 👤 **4. User & Group Setup**

* ✅ `sudo make install-groups-users`
* ✅ `sudo groupadd -r nagios` *(only if not created above)*
* ✅ `sudo passwd nagios`
* ✅ `sudo usermod -aG nagios www-data`

---

### 📂 **5. Install Core Files**

* ✅ `sudo make install`

---

### 🔄 **6. Set Up Nagios as a Service**

* ✅ `sudo make install-daemoninit`
* ✅ `sudo make install-commandmode`
* ✅ `sudo make install-config`
* ✅ `sudo make install-webconf`

---

### 🌐 **7. Apache Configuration**

* ✅ `sudo a2enmod cgi`
* ✅ `sudo a2enmod rewrite`
* ✅ `sudo htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin`

---

### 🔍 **8. Verify & Restart**

* ✅ `sudo /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.conf`
* ✅ `sudo systemctl restart nagios`
* ✅ `sudo systemctl restart apache2`

---

### 🧩 **9. Nagios Plugins Installation**

* ✅ `sudo apt-get install -y automake autotools-dev bc build-essential dc gawk gettext libmcrypt-dev libnet-snmp-perl libssl-dev snmp`
* ➕ Then:

```bash
./configure
make
sudo make install
```

---

## 🔐 **Post-Installation Tips**

* Access UI: `http://<your-server-ip>/nagios`
* Login: `nagiosadmin` + password you set
* Plugin commands live in: `/usr/local/nagios/libexec`
* Config files in: `/usr/local/nagios/etc`

---

Would you like this as a **Bash script**, **printable PDF**, or **Markdown cheat sheet** for future use?

This is a **complete and accurate workflow** for integrating a **Windows client with Nagios using the NCPA plugin**. It's excellent for a **lab practical, exam prep, or deployment**. Below is a **refined summary with optional enhancements** you can consider:

---

## 🛠️ **Windows Client Monitoring with Nagios (NCPA Integration)**

### 📁 `/Nagios_Client_Setup`

---

### 🖥️ STEP 1: On the **Windows Client**

| Action                | Details                                                                   |
| --------------------- | ------------------------------------------------------------------------- |
| 📦 Install NCPA Agent | Download from: [https://www.nagios.org/ncpa](https://www.nagios.org/ncpa) |
| 🔑 Set Token          | e.g., `mysecret`                                                          |
| 🔓 Firewall           | Disable or allow port **5693**                                            |
| 🌐 Test               | Open `http://<client-ip>:5693` in browser – NCPA UI should appear         |

---

### 🖧 STEP 2: On the **Nagios Server (Linux)**

#### 🔽 2.1: Download & Place `check_ncpa.py`

```bash
wget https://assets.nagios.com/downloads/ncpa/check_ncpa.py
sudo mv check_ncpa.py /usr/local/nagios/libexec/
sudo chmod +x /usr/local/nagios/libexec/check_ncpa.py
```

#### 🐍 2.2: Make Python3 Compatible

Edit the first line:

```python
#!/usr/bin/env python3
```

#### 🔁 2.3: Test Plugin Connection

```bash
cd /usr/local/nagios/libexec/
sudo ./check_ncpa.py -t 'mysecret' -H <client-ip> -M memory/virtual
```

---

#### 🧩 2.4: Define Command in `commands.cfg`

Path: `/usr/local/nagios/etc/objects/commands.cfg`

```cfg
define command {
    command_name    check_ncpa
    command_line    $USER1$/check_ncpa.py -H $HOSTADDRESS$ $ARG1$
}
```

---

#### 📂 2.5–2.6: Enable & Prepare Custom Config Directory

```bash
sudo mkdir -p /usr/local/nagios/etc/servers
```

In `nagios.cfg`, uncomment:

```cfg
cfg_dir=/usr/local/nagios/etc/servers
```

---

#### 🖥️ 2.7: Create Host Definition File

Path: `/usr/local/nagios/etc/servers/win10-1.cfg`

```cfg
define host {
    use                 windows-server
    host_name           win10-1
    alias               Windows 10 Sys 1
    address             192.168.80.132
    max_check_attempts  5
}

define service {
    use                 generic-service
    host_name           win10-1
    service_description NCPA Agent Version
    check_command       check_ncpa! -t 'mysecret' -P 5693 -M system/agent_version
}

define service {
    use                 generic-service
    host_name           win10-1
    service_description CPU Average
    check_command       check_ncpa! -t 'mysecret' -P 5693 -M cpu/percent -w 20 -c 40 -q 'aggregate=avg'
}
```

---

#### 🔁 2.8: Restart Nagios

```bash
sudo systemctl restart nagios
```

---

## ✅ Summary

* **NCPA installed** on Windows with agent reachable on port 5693.
* **`check_ncpa.py`** downloaded, tested, and configured.
* **Custom command and host/services** added to Nagios config.
* **Nagios restarted**, client monitoring live via web UI.

---

## 🗂️ Modified or Created Files

| Path                                         | Description             |
| -------------------------------------------- | ----------------------- |
| `/usr/local/nagios/libexec/check_ncpa.py`    | NCPA plugin             |
| `/usr/local/nagios/etc/nagios.cfg`           | Enabled `cfg_dir`       |
| `/usr/local/nagios/etc/objects/commands.cfg` | Added NCPA command      |
| `/usr/local/nagios/etc/servers/win10-1.cfg`  | Windows host definition |

---

Would you like this exported as a **PDF checklist**, **Bash automation script**, or **template config pack**?

